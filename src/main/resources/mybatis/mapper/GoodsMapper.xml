<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkxu.demo.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.kkxu.demo.common.domain.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="info" jdbcType="VARCHAR" property="info" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="sold_count" jdbcType="INTEGER" property="soldCount" />
    <result column="rest_count" jdbcType="INTEGER" property="restCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, seller_id, name, info, price, sold_count, rest_count
  </sql>
  <select id="selectByExample" parameterType="com.kkxu.demo.common.domain.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kkxu.demo.common.domain.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kkxu.demo.common.domain.Goods">
    insert into goods (id, seller_id, name, 
      info, price, sold_count, 
      rest_count)
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{info,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{soldCount,jdbcType=INTEGER}, 
      #{restCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kkxu.demo.common.domain.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="soldCount != null">
        sold_count,
      </if>
      <if test="restCount != null">
        rest_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="soldCount != null">
        #{soldCount,jdbcType=INTEGER},
      </if>
      <if test="restCount != null">
        #{restCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kkxu.demo.common.domain.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.soldCount != null">
        sold_count = #{record.soldCount,jdbcType=INTEGER},
      </if>
      <if test="record.restCount != null">
        rest_count = #{record.restCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set id = #{record.id,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      info = #{record.info,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      sold_count = #{record.soldCount,jdbcType=INTEGER},
      rest_count = #{record.restCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kkxu.demo.common.domain.Goods">
    update goods
    <set>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="soldCount != null">
        sold_count = #{soldCount,jdbcType=INTEGER},
      </if>
      <if test="restCount != null">
        rest_count = #{restCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kkxu.demo.common.domain.Goods">
    update goods
    set seller_id = #{sellerId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      info = #{info,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      sold_count = #{soldCount,jdbcType=INTEGER},
      rest_count = #{restCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


<!--  2020.06.12-->
<!--  非自带代码-->
  <update id="updateById" parameterType="com.kkxu.demo.common.domain.Goods">
    update goods
    <set>
      <if test="goods.sellerId != null">
        seller_id = #{goods.sellerId,jdbcType=INTEGER},
      </if>
      <if test="goods.name != null">
        name = #{goods.name,jdbcType=VARCHAR},
      </if>
      <if test="goods.info != null">
        info = #{goods.info,jdbcType=VARCHAR},
      </if>
      <if test="goods.price != null">
        price = #{goods.price,jdbcType=DOUBLE},
      </if>
      <if test="goods.soldCount != null">
        sold_count = #{goods.soldCount,jdbcType=INTEGER},
      </if>
      <if test="goods.restCount != null">
        rest_count = #{goods.restCount,jdbcType=INTEGER},
      </if>
    </set>
    where goods.id=#{goodsid};
  </update>

  <select id="selectMaxID" resultType="java.lang.Integer">
        select MAX(id)  AS id from goods;
    </select>
</mapper>