<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkxu.demo.mapper.LoginMapper">
  <resultMap id="BaseResultMap" type="com.kkxu.demo.common.domain.Login">
    <id column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="isseller" jdbcType="BIT" property="isseller" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_id, id, seller_id, password, isseller
  </sql>
  <select id="selectByExample" parameterType="com.kkxu.demo.common.domain.LoginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login
    where account_id = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from login
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.kkxu.demo.common.domain.LoginExample">
    delete from login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kkxu.demo.common.domain.Login">

    insert into login (account_id, id, seller_id,
      password, isseller)
    values (#{accountId,jdbcType=VARCHAR}, #{id,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR}, #{isseller,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.kkxu.demo.common.domain.Login">
    insert into login
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="isseller != null">
        isseller,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isseller != null">
        #{isseller,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kkxu.demo.common.domain.LoginExample" resultType="java.lang.Long">
    select count(*) from login
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update login
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.isseller != null">
        isseller = #{record.isseller,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login
    set account_id = #{record.accountId,jdbcType=VARCHAR},
      id = #{record.id,jdbcType=INTEGER},
      seller_id = #{record.sellerId,jdbcType=INTEGER},
      password = #{record.password,jdbcType=VARCHAR},
      isseller = #{record.isseller,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kkxu.demo.common.domain.Login">
    update login
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isseller != null">
        isseller = #{isseller,jdbcType=BIT},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kkxu.demo.common.domain.Login">
    update login
    set id = #{id,jdbcType=INTEGER},
      seller_id = #{sellerId,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      isseller = #{isseller,jdbcType=BIT}
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>


<!--  自己输入的-->
  <!-- 不是生成的代码 -->
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from login where id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>

  <select id="selectAll" parameterType="com.kkxu.demo.common.domain.Login">
    select * from login;
  </select>

<update id="updateById" parameterType="com.kkxu.demo.common.domain.Login">
update login
  <set>
    <if test="login.id != null">
      id = #{login.id,jdbcType=INTEGER},
    </if>
    <if test="login.sellerId != null">
      seller_id = #{login.sellerId,jdbcType=INTEGER},
    </if>
    <if test="login.password != null">
      password = #{login.password,jdbcType=VARCHAR},
    </if>
    <if test="login.isseller != null">
      isseller = #{login.isseller,jdbcType=BIT},
    </if>
  </set>
  where login.account_id=#{account_id};
</update>

</mapper>